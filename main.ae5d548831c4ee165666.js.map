{"version":3,"sources":["webpack:///./script/timer.js","webpack:///./index.js"],"names":["daysRef","document","querySelector","hoursRef","minutesRef","secondsRef","constructor","targetDate","this","start","timerStart","currentDate","Date","now","total","updateTimer","getTimerParts","setInterval","pad","value","String","padStart","time","days","Math","floor","hours","mins","secs","textContent","selector","CountdownTimer"],"mappings":"mIAEA,MAAMA,EAAUC,SAASC,cAAc,2BACjCC,EAAWF,SAASC,cAAc,4BAClCE,EAAaH,SAASC,cAAc,2BACpCG,EAAaJ,SAASC,cAAc,2BCDvB,IDGnB,MACII,aAAY,WAAEC,IAChBC,KAAKD,WAAaA,EAClBC,KAAKC,QACLD,KAAKE,aAGPA,aACI,MAAMC,EAAcC,KAAKC,MACnBC,EAAQN,KAAKD,WAAaI,EAChCH,KAAKO,YAAYP,KAAKQ,cAAcF,IAGxCL,QACIQ,YAAY,KAAOT,KAAKE,cAAe,KAG3CQ,IAAIC,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAEnCL,cAAcM,GAQZ,MAAO,CAACC,KAPKf,KAAKU,IAAIM,KAAKC,MAAMH,EAAO,QAO1BI,MANAlB,KAAKU,IACjBM,KAAKC,MAAOH,EAAO,MAAR,OAKQK,KAHRnB,KAAKU,IAAIM,KAAKC,MAAOH,EAAO,KAAR,MAGNM,KAFdpB,KAAKU,IAAIM,KAAKC,MAAOH,EAAO,IAAe,OAK1DP,aAAY,KAACQ,EAAD,MAAOG,EAAP,KAAcC,EAAd,KAAoBC,IAC5B5B,EAAQ6B,YAAe,GAAEN,EACzBpB,EAAS0B,YAAe,GAAEH,EAC1BtB,EAAWyB,YAAe,GAAEF,EAC5BtB,EAAWwB,YAAe,GAAED,ICtCM,CACpCE,SAAU,WACVvB,WAAY,IAAIK,KAAK,kBAIZmB,mB","file":"main.ae5d548831c4ee165666.js","sourcesContent":["export { CountdownTimer};\r\n\r\nconst daysRef = document.querySelector('span[data-value=\"days\"]');\r\nconst hoursRef = document.querySelector('span[data-value=\"hours\"]');\r\nconst minutesRef = document.querySelector('span[data-value=\"mins\"]');\r\nconst secondsRef = document.querySelector('span[data-value=\"secs\"]');\r\n\r\nclass CountdownTimer{\r\n    constructor({ targetDate }){\r\n  this.targetDate = targetDate; \r\n  this.start();\r\n  this.timerStart();\r\n};\r\n\r\ntimerStart() {\r\n    const currentDate = Date.now();\r\n    const total = this.targetDate - currentDate;\r\n    this.updateTimer(this.getTimerParts(total)); \r\n}\r\n\r\nstart(){\r\n    setInterval(() => {this.timerStart()}, 1000);\r\n}\r\n\r\npad(value) {\r\n  return String(value).padStart(2, \"0\");\r\n}\r\ngetTimerParts(time) {\r\n  const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n  const hours = this.pad(\r\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n  );\r\n  const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n  return {days, hours, mins, secs};\r\n}\r\n\r\nupdateTimer({days, hours, mins, secs}) {\r\n    daysRef.textContent = `${days}`;\r\n    hoursRef.textContent = `${hours}`;\r\n    minutesRef.textContent = `${mins}`;\r\n    secondsRef.textContent = `${secs}`;  \r\n}}\r\n","import './styles.css';\r\nimport { CountdownTimer } from './script/timer.js';\r\n\r\n\r\nconst timerCount = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('may 01, 2021'),\r\n  \r\n});\r\n\r\ntimerCount.CountdownTimer();\r\n"],"sourceRoot":""}